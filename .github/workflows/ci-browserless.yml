name: CI Browserless

on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - 'apps/browserless/**'
      - 'apps/extension/**'
      - 'packages/shared/**'

permissions:
  contents: read
  packages: write

env:
  DOCK_IMAGE_NAME: aident-ai/open-cuak-browserless

jobs:
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Run Prettier
        id: prettier-run
        uses: rutajdash/prettier-cli-action@v1.0.0
        with:
          config_path: ./.prettierrc
      - name: Prettier Output
        if: ${{ failure() }}
        shell: bash
        run: |
          echo "The following files are not formatted:"
          echo "${{steps.prettier-run.outputs.prettier_output}}"

  # ##################################################
  # TODO: enable Jest check after fixing the tests
  # ##################################################
  # jest:
  #   name: Run Jest Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #
  #     - name: Install Node Dependencies
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 9
  #         run_install: |
  #           - recursive: true
  #             args: [--frozen-lockfile, --strict-peer-dependencies]
  #           - args: [--global, gulp, prettier, typescript]
  #
  #     - name: Run Jest Tests
  #       run: npx turbo test:ci

  on-pull-request:
    name: Build Browserless
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Extension
        uses: ./.github/actions/build-extension
      - name: Build Browserless
        uses: ./.github/actions/build-browserless

  on-push:
    name: Build and Publish Browserless
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Extension
        uses: ./.github/actions/build-extension
      - name: Build Browserless
        uses: ./.github/actions/build-browserless

      # Publish to GHCR
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/browserless
          file: ./apps/browserless/Dockerfile.production
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }}
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest
          push: true
